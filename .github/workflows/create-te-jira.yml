name: Create Jira Ticket

on:
  workflow_call:
    inputs:
      jira_base_url:
        required: true
        type: string
      jira_user_email:
        required: true
        type: string
      high_priority:
        required: false
        type: boolean
      additional_info:
        required: false
        type: string
    outputs:
      repo_name:
        description: "Uppercase name of the repository"
        value: ${{ jobs.create-jira-ticket.outputs.repo_name }}
      jira_ticket_id:
        description: "Jira ID of the created Jira ticket"
        value: ${{ jobs.create-jira-ticket.outputs.jira_ticket_id }}
      jira_ticket_url:
        description: "URL of the created Jira ticket"
        value: ${{ jobs.create-jira-ticket.outputs.jira_ticket_url }}
    secrets:
      GH_TOKEN:
        required: true
      JIRA_API_TOKEN:
        required: true

permissions:
  contents: read
  pull-requests: read

jobs:
  fetch-failures:
    uses: ./.github/workflows/fetch-failures.yml
    secrets: inherit

  create-jira-ticket:
    needs: fetch-failures
    runs-on: ubuntu-latest
    env:
      JIRA_BASE_URL: ${{ inputs.jira_base_url }}
      JIRA_USER_EMAIL: ${{ inputs.jira_user_email }}
      JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}
    outputs:
      repo_name: ${{ steps.set_fields.outputs.repo_name }}
      jira_ticket_id: ${{ steps.set-url.outputs.jira_ticket_id }}
      jira_ticket_url: ${{ steps.set-url.outputs.jira_ticket_url }}
    steps:
      - name: Authenticate with Jira 
        uses: atlassian/gajira-login@v3

      - name: Format Jira Fields
        id: set_fields
        run: |
          # Set uppercase repo name
          REPO_NAME=$(echo '${{ github.repository }}' | cut -d'/' -f2 | tr 'a-z' 'A-Z')
          echo "repo_name=$REPO_NAME" >> $GITHUB_OUTPUT

          # Set high priority field if requested
          if [ "${{ inputs.high_priority }}" == "true" ]; then
            echo 'priority_field={"name":"High"}' >> $GITHUB_OUTPUT
            echo "duedate_field=$(date +%F)" >> $GITHUB_OUTPUT
          else
            echo 'priority_field=' >> $GITHUB_OUTPUT
            echo 'duedate_field=' >> $GITHUB_OUTPUT
          fi

      - name: Create Jira issue
        id: create
        uses: atlassian/gajira-create@v3
        with:
          project: GH
          issuetype: Task
          summary: >
            [${{ env.REPO_NAME }}] Issue detected on PR #${{ github.event.issue.number }}: ${{ github.event.issue.title }}
          description: |
            {panel}
            *Pull Request:* ${{ github.server_url }}/${{ github.repository }}/pull/${{ github.event.issue.number }}
            *Requested by:* [@${{ github.event.comment.user.login }}|https://github.com/${{ github.event.comment.user.login }}]
            {panel}

            ${{ inputs.additional_info }}

            ${{ needs.fetch-failures.outputs.markdown_fragment }}

            {panel:bgColor=#fefae6}
            Please review the failing checks and keep the ticket up-to-date with the progress status.
            {panel}
          fields: >
            {
              ${{ steps.set_fields.outputs.priority_field && format('"priority":{0},', steps.set_fields.outputs.priority_field) || '' }}
              ${{ steps.set_fields.outputs.duedate_field && format('"duedate":"{0}"', steps.set_fields.outputs.duedate_field) || '' }}
            }

      - name: Assign Jira Ticket
        run: |
          accountId=$(curl -s -u "${{ inputs.jira_user_email }}:$JIRA_API_TOKEN" \
            -G --data-urlencode "query=${{ inputs.jira_user_email }}" \
            "${{ inputs.jira_base_url }}/rest/api/3/user/search" | jq -r '.[0].accountId')

          if [ -z "$accountId" ] || [ "$accountId" = "null" ]; then
            echo "⚠️ No Jira account ID found for ${{ inputs.jira_user_email }}. Skipping assignment."
            exit 0
          fi

          echo "Assigning ticket to accountId: $accountId"

          curl -X PUT -u "${{ inputs.jira_user_email }}:$JIRA_API_TOKEN" \
            -H "Content-Type: application/json" \
            --data "$(jq -n --arg accountId "$accountId" '{accountId: $accountId}')" \
            "${{ inputs.jira_base_url }}/rest/api/3/issue/${{ steps.create.outputs.issue }}/assignee"

      - name: Transition Jira Issue to "Open"
        run: |
          curl -X POST -u "${{ inputs.jira_user_email }}:$JIRA_API_TOKEN" \
            -H "Content-Type: application/json" \
            --data '{"transition":{"id":"21"}}' \
            "${{ inputs.jira_base_url }}/rest/api/3/issue/${{ steps.create.outputs.issue }}/transitions"

      - name: Set Output Data
        id: set-url
        run: |
          echo "repo_name=$(echo '${{ github.repository }}' | cut -d'/' -f2 | tr 'a-z' 'A-Z')" >> $GITHUB_OUTPUT
          echo "jira_ticket_id=${{ steps.create.outputs.issue }}" >> $GITHUB_OUTPUT
          echo "jira_ticket_url=${{ inputs.jira_base_url }}/browse/${{ steps.create.outputs.issue }}" >> $GITHUB_OUTPUT
